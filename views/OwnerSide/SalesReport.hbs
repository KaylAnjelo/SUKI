<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sales Report - SUKI Incorporation</title>
  <link rel="stylesheet" href="/css/OwnerStyles.css">
  <link rel="stylesheet" href="/css/sales.css">
  <script src="/js/notifications.js" defer></script>
  <script src="/js/logout.js" defer></script>
  <script src="/js/sidebar.js" defer></script>
  <script src="/js/filter.js" defer></script>
  <script src="/js/download.js" defer></script>
  <link rel="icon" type="image/png" href="/assets/SUKI Logo 2.png">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
</head>
<body>
  <div class="container">
    <aside class="sidebar">
      <button id="sidebarToggle" class="sidebar-toggle" aria-label="Toggle sidebar"><i class="fas fa-bars"></i></button>
      <div class="logo">SUKI Incorporation</div>
      <nav class="nav">
        <a href="/owner-dashboard" class="nav-item">
          <i class="fas fa-chart-line"></i><span class="label">Dashboard</span>
        </a>
        <a href="/owner/sales-report" class="nav-item active">
          <i class="fas fa-chart-bar"></i><span class="label">Sales Report</span>
        </a>
        <a href="/owner/transactions" class="nav-item">
          <i class="fas fa-exchange-alt"></i><span class="label">Transactions</span>
        </a>
        <a href="/owner/products" class="nav-item">
          <i class="fas fa-box"></i><span class="label">Products</span>
        </a>
        <a href="/owner/promotions" class="nav-item">
          <i class="fas fa-percentage"></i><span class="label">Promotions</span>
        </a>
        <a href="/owner/profile" class="nav-item">
          <i class="fas fa-user"></i><span class="label">Profile</span>
        </a>
      </nav>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <div class="header">
        <div class="header-left">
          <h1>Sales Report</h1>
        </div>
        <div class="header-right">
          <button id="notificationsBtn" class="notif-button"><i class="fas fa-bell"></i></button>
          <div id="notificationsDropdown" style="display: none;">
            <ul id="notificationsList"></ul>
          </div>
          <form id="logoutForm" action="/logout" method="POST" style="display: inline;">
            <button type="submit" class="logout">Log out</button>
          </form>
        </div>
      </div>
      
      <!-- Sales Report Content -->
      <div class="sales-report-content">
        <!-- Download Section -->
        <div class="download-section">
          <button id="downloadCSV" class="download-btn csv-btn">
            <i class="fas fa-file-csv"></i>
            Download CSV
          </button>
          <button id="downloadPDF" class="download-btn pdf-btn">
            <i class="fas fa-file-pdf"></i>
            Download PDF
          </button>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
          <div class="filter-row">
            <div class="filter-group">
              <label for="dateFrom">Date Range:</label>
              <div class="date-range">
                <input type="date" id="dateFrom" name="dateFrom" class="date-input">
                <span class="date-separator">to</span>
                <input type="date" id="dateTo" name="dateTo" class="date-input">
              </div>
            </div>
            
            <div class="filter-group">
              <label for="storeFilter">Store:</label>
              <select id="storeFilter" name="storeFilter" class="filter-select">
                <option value="">All Stores</option>
                <!-- Store options will be populated by JavaScript -->
              </select>
            </div>
            
            <div class="filter-group">
              <label for="sortBy">Sort By:</label>
              <select id="sortBy" name="sortBy" class="filter-select">
                <option value="newest">Newest First</option>
                <option value="oldest">Oldest First</option>
                <option value="amount_high">Amount (High to Low)</option>
                <option value="amount_low">Amount (Low to High)</option>
                <option value="product">Product Name</option>
              </select>
            </div>
          </div>
          
          <div class="filter-actions">
            <button id="applyFilters" class="filter-btn apply-btn">
              <i class="fas fa-filter"></i>
              Apply Filters
            </button>
            <button id="clearFilters" class="filter-btn clear-btn">
              <i class="fas fa-times"></i>
              Clear Filters
            </button>
          </div>
        </div>

        <!-- Sales Data Table -->
        <div class="table-container">
          <table class="sales-table" id="salesTable">
            <thead>
              <tr>
                <th>Date</th>
                <th>Reference #</th>
                <th>Product Sold</th>
                <th>Total Amount</th>
              </tr>
            </thead>
            <tbody id="salesTableBody">
              <!-- Sales data will be populated by JavaScript -->
            </tbody>
          </table>
          
          <!-- Empty State -->
          <div id="emptyState" class="empty-state" style="display: none;">
            <i class="fas fa-chart-bar"></i>
            <h3>No Sales Data Found</h3>
            <p>No sales data available for the selected filters. Try adjusting your date range or store selection.</p>
          </div>
        </div>

        <!-- Pagination -->
        <div class="pagination-container" id="paginationContainer" style="display: none;">
          <div class="pagination-info">
            <span id="paginationInfo">Showing 1-10 of 0 results</span>
          </div>
          <div class="pagination-controls">
            <button id="prevPage" class="pagination-btn" disabled>
              <i class="fas fa-chevron-left"></i>
              Previous
            </button>
            <div class="page-numbers" id="pageNumbers">
              <!-- Page numbers will be generated by JavaScript -->
            </div>
            <button id="nextPage" class="pagination-btn">
              Next
              <i class="fas fa-chevron-right"></i>
            </button>
          </div>
        </div>
      </div>
    </main>
  </div>
  <!-- Loading Overlay -->
  <div id="loadingOverlay" class="loading-overlay" style="display: none;">
    <div class="loading-spinner">
      <i class="fas fa-spinner fa-spin"></i>
      <p>Loading sales data...</p>
    </div>
  </div>

  <script>
    // Sales Report JavaScript functionality
    let currentPage = 1;
    let itemsPerPage = 10;
    let totalPages = 0;
    let totalItems = 0;

    document.addEventListener('DOMContentLoaded', function() {
      console.log('Sales Report page loaded');
      
      // Initialize the sales report
      initializeSalesReport();
      
      // Set up event listeners
      setupEventListeners();
      
      // Load initial data
      loadSalesData();
    });

    function initializeSalesReport() {
      // Set default date range (last 30 days)
      const today = new Date();
      const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));
      
      document.getElementById('dateFrom').value = thirtyDaysAgo.toISOString().split('T')[0];
      document.getElementById('dateTo').value = today.toISOString().split('T')[0];
      
      // Load stores for filter
      loadStores();
    }

    function setupEventListeners() {
      // Filter buttons
      document.getElementById('applyFilters').addEventListener('click', applyFilters);
      document.getElementById('clearFilters').addEventListener('click', clearFilters);
      
      // Download buttons
      document.getElementById('downloadCSV').addEventListener('click', downloadCSV);
      document.getElementById('downloadPDF').addEventListener('click', downloadPDF);
      
      // Pagination
      document.getElementById('prevPage').addEventListener('click', previousPage);
      document.getElementById('nextPage').addEventListener('click', nextPage);
    }

    function loadStores() {
      fetch('/api/owner/stores/dropdown')
        .then(response => response.json())
        .then(stores => {
          const storeFilter = document.getElementById('storeFilter');
          storeFilter.innerHTML = '<option value="">All Stores</option>';
          
          stores.forEach(store => {
            const option = document.createElement('option');
            option.value = store.store_id;
            option.textContent = store.store_name;
            storeFilter.appendChild(option);
          });
        })
        .catch(error => {
          console.error('Error loading stores:', error);
        });
    }

    function loadSalesData() {
      showLoading();
      
      const filters = getCurrentFilters();
      const queryParams = new URLSearchParams();
      
      if (filters.dateFrom) queryParams.append('dateFrom', filters.dateFrom);
      if (filters.dateTo) queryParams.append('dateTo', filters.dateTo);
      if (filters.storeId) queryParams.append('storeId', filters.storeId);
      if (filters.sortBy) queryParams.append('sortBy', filters.sortBy);
      queryParams.append('page', currentPage);
      queryParams.append('limit', itemsPerPage);
      
      fetch(`/api/owner/sales-report?${queryParams}`)
        .then(response => response.json())
        .then(data => {
          displaySalesData(data.sales);
          updatePagination(data);
          hideLoading();
        })
        .catch(error => {
          console.error('Error loading sales data:', error);
          hideLoading();
          showNotification('Error loading sales data', 'error');
        });
    }

    function getCurrentFilters() {
      return {
        dateFrom: document.getElementById('dateFrom').value,
        dateTo: document.getElementById('dateTo').value,
        storeId: document.getElementById('storeFilter').value,
        sortBy: document.getElementById('sortBy').value
      };
    }


    function displaySalesData(data) {
      const tbody = document.getElementById('salesTableBody');
      const emptyState = document.getElementById('emptyState');
      
      if (data.length === 0) {
        tbody.innerHTML = '';
        emptyState.style.display = 'block';
        return;
      }
      
      emptyState.style.display = 'none';
      tbody.innerHTML = '';
      
      data.forEach(sale => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${formatDate(sale.date)}</td>
          <td>${sale.reference}</td>
          <td>${sale.product}</td>
          <td>₱${sale.amount.toFixed(2)}</td>
        `;
        tbody.appendChild(row);
      });
    }

    function formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-PH', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
      });
    }

    function applyFilters() {
      loadSalesData();
    }

    function clearFilters() {
      // Reset to default values
      const today = new Date();
      const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));
      
      document.getElementById('dateFrom').value = thirtyDaysAgo.toISOString().split('T')[0];
      document.getElementById('dateTo').value = today.toISOString().split('T')[0];
      document.getElementById('storeFilter').value = '';
      document.getElementById('sortBy').value = 'newest';
      
      loadSalesData();
    }

    function downloadCSV() {
      const filters = getCurrentFilters();
      const queryParams = new URLSearchParams();
      
      if (filters.dateFrom) queryParams.append('dateFrom', filters.dateFrom);
      if (filters.dateTo) queryParams.append('dateTo', filters.dateTo);
      if (filters.storeId) queryParams.append('storeId', filters.storeId);
      if (filters.sortBy) queryParams.append('sortBy', filters.sortBy);
      
      // Create download link
      const downloadUrl = `/api/owner/sales-report/csv?${queryParams}`;
      const link = document.createElement('a');
      link.href = downloadUrl;
      link.download = 'sales-report.csv';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      
      showNotification('CSV download started', 'success');
    }

    function downloadPDF() {
      const filters = getCurrentFilters();
      const queryParams = new URLSearchParams();
      
      if (filters.dateFrom) queryParams.append('dateFrom', filters.dateFrom);
      if (filters.dateTo) queryParams.append('dateTo', filters.dateTo);
      if (filters.storeId) queryParams.append('storeId', filters.storeId);
      if (filters.sortBy) queryParams.append('sortBy', filters.sortBy);
      
      // Create download link
      const downloadUrl = `/api/owner/sales-report/pdf?${queryParams}`;
      const link = document.createElement('a');
      link.href = downloadUrl;
      link.download = 'sales-report.pdf';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      
      showNotification('PDF download started', 'success');
    }

    function previousPage() {
      if (currentPage > 1) {
        currentPage--;
        loadSalesData();
      }
    }

    function nextPage() {
      if (currentPage < totalPages) {
        currentPage++;
        loadSalesData();
      }
    }

    function updatePagination(data) {
      totalPages = data.totalPages;
      totalItems = data.total;
      currentPage = data.page;
      
      const paginationContainer = document.getElementById('paginationContainer');
      const paginationInfo = document.getElementById('paginationInfo');
      const prevBtn = document.getElementById('prevPage');
      const nextBtn = document.getElementById('nextPage');
      
      if (totalItems > 0) {
        paginationContainer.style.display = 'flex';
        
        const startItem = (currentPage - 1) * itemsPerPage + 1;
        const endItem = Math.min(currentPage * itemsPerPage, totalItems);
        paginationInfo.textContent = `Showing ${startItem}-${endItem} of ${totalItems} results`;
        
        prevBtn.disabled = currentPage <= 1;
        nextBtn.disabled = currentPage >= totalPages;
        
        generatePageNumbers();
      } else {
        paginationContainer.style.display = 'none';
      }
    }

    function generatePageNumbers() {
      const pageNumbers = document.getElementById('pageNumbers');
      pageNumbers.innerHTML = '';
      
      const maxVisiblePages = 5;
      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
      let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
      
      if (endPage - startPage + 1 < maxVisiblePages) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
      }
      
      for (let i = startPage; i <= endPage; i++) {
        const pageBtn = document.createElement('button');
        pageBtn.className = `page-number ${i === currentPage ? 'active' : ''}`;
        pageBtn.textContent = i;
        pageBtn.addEventListener('click', () => {
          currentPage = i;
          loadSalesData();
        });
        pageNumbers.appendChild(pageBtn);
      }
    }

    function showNotification(message, type = 'info') {
      // Create notification element
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.innerHTML = `
        <div class="notification-content">
          <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
          <span>${message}</span>
        </div>
      `;
      
      document.body.appendChild(notification);
      
      // Show notification
      setTimeout(() => {
        notification.classList.add('show');
      }, 100);
      
      // Hide notification after 3 seconds
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 300);
      }, 3000);
    }

    function showLoading() {
      document.getElementById('loadingOverlay').style.display = 'flex';
    }

    function hideLoading() {
      document.getElementById('loadingOverlay').style.display = 'none';
    }
  </script>
</body>
</html>
