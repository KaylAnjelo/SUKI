<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Transactions</title>
  <link rel="stylesheet" href="/css/AdminStyles.css">
  <link rel="stylesheet" href="/css/transactions.css">
  <script src="/js/notifications.js" defer></script>
  <script src="/js/logout.js" defer></script>
  <script src="/js/sidebar.js" defer></script>
  <link rel="icon" type="image/png" href="/assets/SUKI Logo 2.png">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  </head>
  <body>
    <div class="container">
      <aside class="sidebar">
        <button id="sidebarToggle" class="sidebar-toggle" aria-label="Toggle sidebar"><i class="fas fa-bars"></i></button>
        <div class="logo">SUKI Incorporation</div>
        <nav class="nav">
          <a href="/dashboard" class="nav-item">
            <i class="fas fa-chart-line"></i><span class="label">Dashboard</span>
          </a>
          <a href="/reports" class="nav-item">
            <i class="fas fa-file-alt"></i><span class="label">Reports</span>
          </a>
          <a href="/transac" class="nav-item active">
            <i class="fas fa-exchange-alt"></i><span class="label">Transactions</span>
          </a>
          <a href="/users/UserManagement" class="nav-item">
            <i class="fa-solid fa-fingerprint"></i><span class="label">Users</span>
          </a>
        </nav>
      </aside>

      <main class="main-content">
        <div class="header">
          <h1>Transactions</h1>
          <div class="notif-container">
            <button id="notificationsBtn" class="notif-button"><i class="fas fa-bell"></i></button>
            <div id="notificationsDropdown" style="display: none;">
              <ul id="notificationsList"></ul>
            </div>
            <form id="logoutForm" action="/logout" method="POST" style="display: inline;">
              <button type="submit" class="logout">Log out</button>
            </form>
          </div>
        </div>

        <div class="filters-container" id="filtersContainer">
          <div class="filter-group">
            <label for="userFilterTrans">User Type:</label>
            <select id="userFilterTrans" name="userType">
              <option value="">All Types</option>
              <option value="Student">Student</option>
              <option value="Staff">Staff</option>
              <option value="Out-of-School">Out-of-School</option>
            </select>
          </div>
          <button id="applyFiltersTrans" class="filter-btn">Apply Filters</button>
        </div>

        <div class="table-container">
          <div class="table-scroll">
            <table>
              <thead>
                <tr>
                  
                  <th>Account Name</th>
                  <th>Amount</th>
                  <th>Accumulated Reward</th>
                  <th>Transaction Date</th>
                  <th>Status</th>
                  <th>Details</th>
                </tr>
              </thead>
              <tbody id="transactionsBody"></tbody>
            </table>
          </div>
        </div>

        <!-- Receipt Modal -->
        <div id="detailsModal" class="modal" style="display:none;">
          <div class="modal-content receipt-modal">
            <div class="receipt-header">
              <div class="receipt-logo">
                <i class="fas fa-store"></i>
                <span>SUKI Incorporation</span>
              </div>
              <span class="close" onclick="closeDetailsModal()">&times;</span>
            </div>
            
            <div class="receipt-body">
              <div class="receipt-title">
                <h2>Transaction Receipt</h2>
                <div class="receipt-number">Ref: #<span id="dRef"></span></div>
              </div>
              
              <div class="receipt-info">
                <div class="info-row">
                  <span class="label">Date & Time:</span>
                  <span class="value" id="dDate"></span>
                </div>
                <div class="info-row">
                  <span class="label">Customer:</span>
                  <span class="value" id="dUser"></span>
                </div>
                <div class="info-row">
                  <span class="label">Store:</span>
                  <span class="value" id="dStore"></span>
                </div>
                <div class="info-row">
                  <span class="label">Transaction Type:</span>
                  <span class="value" id="dType"></span>
                </div>
              </div>
              
              <div class="receipt-items">
                <div class="item-header">
                  <span>Item Details</span>
                </div>
                <div class="item-row">
                  <span class="item-name" id="dProduct"></span>
                </div>
              </div>
              
              <div class="receipt-summary">
                <div class="summary-row">
                  <span class="label">Amount:</span>
                  <span class="value amount" id="dAmount"></span>
                </div>
                <div class="summary-row">
                  <span class="label">Points Earned:</span>
                  <span class="value points" id="dPoints"></span>
                </div>
                <div class="summary-divider"></div>
                <div class="summary-row total">
                  <span class="label">Total Points:</span>
                  <span class="value" id="dPoints"></span>
                </div>
              </div>
              
              <div class="receipt-footer">
                <p>Thank you for your purchase!</p>
                <p class="footer-note">Keep this receipt for your records</p>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
    <script>
      async function loadUsersIntoDropdown() {
        // Static options already in markup; keep for API parity
        return Promise.resolve();
      }

      async function loadTransactions() {
        const selectedType = document.getElementById('userFilterTrans').value;
        try {
          const response = await fetch('/reports/transactions/filter', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userType: selectedType })
          });
          if (!response.ok) throw new Error('Failed to fetch transactions');
          const rows = await response.json();
          const tbody = document.getElementById('transactionsBody');
          tbody.innerHTML = '';
          rows.forEach((t) => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
              <td>${t.user}</td>
              <td>${t.amount}</td>
              <td>${t.points ?? 0}</td>
              <td>${t.date_time}</td>
              <td>${t.transaction_type}</td>
              <td><a href=\"#\" class=\"view-details\" data-user=\"${t.user}\" data-transaction=\"${t.transaction_id}\" data-amount=\"${t.amount}\" data-points=\"${t.points ?? 0}\" data-date=\"${t.date_time}\" data-type=\"${t.transaction_type}\" data-store=\"${t.store_name}\" data-product=\"${t.product_details}\">View Details</a></td>
            `;
            tbody.appendChild(tr);
          });

          // Wire up details modal clicks (event delegation)
          tbody.addEventListener('click', function(e) {
            const link = e.target.closest('.view-details');
            if (!link) return;
            e.preventDefault();
            openDetailsModal({
              user: link.dataset.user,
              ref: link.dataset.transaction,
              amount: link.dataset.amount,
              points: link.dataset.points,
              type: link.dataset.type,
              date: link.dataset.date,
              store: link.dataset.store,
              product: link.dataset.product,
            });
          });
        } catch (e) {
          console.error(e);
        }
      }

      document.addEventListener('DOMContentLoaded', () => {
        loadUsersIntoDropdown().then(loadTransactions);
        document.getElementById('applyFiltersTrans').addEventListener('click', loadTransactions);
      });

      function openDetailsModal(data) {
        const m = document.getElementById('detailsModal');
        document.getElementById('dUser').textContent = data.user || '';
        document.getElementById('dRef').textContent = data.ref || '';
        document.getElementById('dAmount').textContent = formatCurrency(data.amount);
        document.getElementById('dPoints').textContent = String(data.points ?? 0);
        document.getElementById('dType').textContent = data.type || '';
        document.getElementById('dDate').textContent = formatDateHuman(data.date);
        document.getElementById('dStore').textContent = data.store || '';
        document.getElementById('dProduct').textContent = data.product || '';
        m.style.display = 'block';
        // Close when clicking outside content
        m.addEventListener('click', function onBg(e){ if (e.target === m) { closeDetailsModal(); m.removeEventListener('click', onBg); } });
      }

      function closeDetailsModal() {
        const m = document.getElementById('detailsModal');
        m.style.display = 'none';
      }

      function formatCurrency(v) {
        const n = Number(v);
        return isFinite(n) ? `â‚±${n.toFixed(2)}` : (v ?? '');
      }

      function formatDateHuman(dateString) {
        if (!dateString) return '';
        const date = new Date(dateString);
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        return date.toLocaleDateString('en-US', options);
      }
    </script>
  </body>
  </html>